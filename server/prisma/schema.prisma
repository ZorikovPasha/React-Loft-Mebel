// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Image {
  id                  Int        @id @default(autoincrement())
  name                String
  alternativeText     String?
  caption             String?
  width               Int
  height              Int
  hash                String
  ext                 String
  size                Int
  url                 String
  mime                String
  provider            String
  data                Bytes
  createdAt           DateTime   @default(now())
  updatedAt           DateTime   @updatedAt
  furniture           Furniture? @relation("Image")
  user                User?
  reviewId Int?
  review       Review?     @relation(fields: [reviewId], references: [id])
}

model User {
  id                         String              @id @default(uuid())
  name                       String
  surname                    String?
  userName                   String              @unique
  password                   String
  email                      String              @unique
  phone                      String?
  city                       String?
  street                     String?
  house                      String?
  apartment                  String?
  photo                      Image?              @relation(fields: [photoId], references: [id])
  photoId                    Int?                @unique
  role                       Role                @default(BASIC)
  emailConfirmed             Boolean             @default(false)
  DecidedOnWantsToReceiveEmailUpdates Boolean @default(false)
  wantsToReceiveEmailUpdates Boolean             @default(false)
  favorites                  FavoriteFurniture[]
  orders                     Order[]
  createdAt                  DateTime            @default(now())
  updatedAt                  DateTime            @updatedAt
  cart                       Cart?
  reviews Review[]
}

model FavoriteFurniture {
  id          Int       @id @default(autoincrement())
  userId      String
  furnitureId Int
  furniture   Furniture @relation(fields: [furnitureId], references: [id])
  user        User      @relation(fields: [userId], references: [id])
}

model FurnitureDimension {
  id          Int       @id @default(autoincrement())
  furnitureId Int
  width       Int
  length      Int
  height      Int
  furniture   Furniture @relation(fields: [furnitureId], references: [id])
}

model Furniture {
  id                Int                  @id @default(autoincrement())
  imageId           Int                  @unique
  image             Image                @relation("Image", fields: [imageId], references: [id])
  // thumbnails        Image[]              @relation("Thumbnails")
  name              String
  type              String
  priceOld          String
  priceNew          String
  dimensions        FurnitureDimension[]
  colors            String[]
  rating            String
  sale              Boolean
  room              String
  material          String
  brand             String
  FavoriteFurniture FavoriteFurniture[]
  furnitureInCart   CartFurniture[]
  orderedFurniture  OrderedFurniture[]
  reviews Review[]
  description String 
  specs String 
}

model Cart {
  id     Int             @id @default(autoincrement())
  items  CartFurniture[]
  userId String          @unique
  user   User            @relation(fields: [userId], references: [id])
}

model CartFurniture {
  id          Int       @id @default(autoincrement())
  furniture   Furniture @relation(fields: [furnitureId], references: [id])
  furnitureId Int
  cartId      Int
  quintity    Int
  color String @default("")
  cart        Cart      @relation(fields: [cartId], references: [id])
}

model OrderedFurniture {
  id          Int       @id @default(autoincrement())
  furniture   Furniture @relation(fields: [furnitureId], references: [id])
  furnitureId Int
  orderId     Int
  quintity    Int
  color String @default("")
  order       Order     @relation(fields: [orderId], references: [id])
}

model Order {
  id        Int                @id @default(autoincrement())
  userId    String
  user      User               @relation(fields: [userId], references: [id])
  name      String
  status    OrderStatus        @default(CREATED)
  createdAt DateTime           @default(now())
  updatedAt DateTime           @updatedAt
  items     OrderedFurniture[]
}

model Review {
  id        Int                @id @default(autoincrement())
  text String
  photo Image[]
  score Float
  user User @relation(fields: [userId], references: [id])
  userId String
  furnitureId Int
  furniture Furniture @relation(fields: [furnitureId], references: [id])
  createdAt DateTime           @default(now())
  updatedAt DateTime           @updatedAt @default(now())
}

enum Role {
  BASIC
  EDITOR
  AUTHOR
  ADMIN
}

enum OrderStatus {
  CREATED
  WORKING
  COMPLETED
  CANCELED
}
